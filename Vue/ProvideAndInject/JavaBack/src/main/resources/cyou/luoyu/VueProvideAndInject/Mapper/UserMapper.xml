<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 学生信息表(user) -->
<mapper namespace="cyou.luoyu.VueProvideAndInject.Mapper.UserMapper">
    <!-- This code was generated by TableGo tools, mark 1 begin. -->
    <!-- 字段映射 -->
    <resultMap id="userMap" type="cyou.luoyu.VueProvideAndInject.Entity.UserEntity">
        <id column="id" property="id" jdbcType="VARCHAR"/>
        <result column="stuName" property="stuName" jdbcType="VARCHAR"/>
        <result column="ifOut" property="ifOut" jdbcType="TINYINT"/>
        <result column="sex" property="sex" jdbcType="VARCHAR"/>
    </resultMap>
    <!-- This code was generated by TableGo tools, mark 1 end. -->

    <!-- This code was generated by TableGo tools, mark 2 begin. -->
    <!-- 表查询字段 -->
    <sql id="allColumns">
        u.id, u.stuName, u.ifOut, u.sex
    </sql>
    <!-- This code was generated by TableGo tools, mark 2 end. -->

    <!-- 查询所有学生信息表 -->
    <select id="findUserAll" resultMap="userMap">
        SELECT
        <include refid="allColumns"/>
        FROM user u
    </select>
    <!-- 查询所有学生信息表 -->
    <select id="findUserById" resultMap="userMap">
        SELECT
        <include refid="allColumns"/>
        FROM user u
        WHERE u.id = #{id}
    </select>

    <!-- 根据条件参数查询学生信息表列表 -->
    <select id="findUserByCondition" resultMap="userMap" parameterType="map">
        SELECT
        <include refid="allColumns"/>
        FROM user u WHERE 1 = 1
        <if test="stuName != null and stuName != ''">
            AND u.stuName LIKE CONCAT('%', #{stuName}, '%')
        </if>
        <if test="ifOut != null">
            AND u.ifOut = #{ifOut}
        </if>
        <if test="sex != null and sex != ''">
            AND u.sex LIKE CONCAT('%', #{sex}, '%')
        </if>
    </select>

    <!-- 根据主键查询学生信息表信息 -->
    <select id="findUserByIds" resultMap="userMap" parameterType="list">
        SELECT
        <include refid="allColumns"/>
        FROM user u WHERE u.id IN
        <foreach collection="list" index="index" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>

    <!-- 新增学生信息表信息 -->
    <insert id="addUser">
        INSERT INTO user (`id`, `stuName`, `ifOut`, `sex`)
        VALUES (#{id},#{stuName},#{ifOut},#{sex})
    </insert>

    <!-- 批量新增学生信息表信息 -->
    <insert id="addUsers" parameterType="list">
        INSERT INTO user (
        `id`, `stuName`, `ifOut`, `sex`
        ) VALUES
        <foreach collection="list" index="index" item="item" separator=",">
            (
            #{item.id},
            #{item.stuName},
            #{item.ifOut},
            #{item.sex}
            )
        </foreach>
    </insert>

    <!-- 修改学生信息表信息 -->
    <update id="updateUser">
        UPDATE user
        <set>
            <if test="stuName != null">
                stuName = #{stuName},
            </if>
            <if test="ifOut != null">
                ifOut = #{ifOut},
            </if>
            <if test="sex != null">
                sex = #{sex}
            </if>
        </set>
        WHERE id = #{id}
    </update>

    <!-- 批量修改学生信息表信息  有bug-->
<!--    <update id="updateUsers" parameterType="list">-->
<!--        <foreach collection="list" index="index" item="item" separator=";">-->
<!--            UPDATE `user`-->
<!--            <set>-->
<!--                <if test="item.stuName != null">-->
<!--                    stuName = #{item.stuName},-->
<!--                </if>-->
<!--                <if test="item.ifOut != null">-->
<!--                    ifOut = #{item.ifOut},-->
<!--                </if>-->
<!--                <if test="item.sex != null">-->
<!--                    sex = #{item.sex}-->
<!--                </if>-->
<!--            </set>-->
<!--            WHERE id = #{item.id}-->
<!--        </foreach>-->
<!--    </update>-->

    <!-- 根据主键删除学生信息表 -->
    <delete id="deleteUserById" parameterType="string">
        DELETE
        FROM user
        WHERE id = #{id}
    </delete>

    <!-- 根据主键批量删除学生信息表 -->
    <delete id="deleteUserByIds" parameterType="list">
        DELETE FROM user WHERE id IN
        <foreach collection="list" index="index" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>